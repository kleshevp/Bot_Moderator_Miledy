import telebot
from telebot import TeleBot, types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import random
import time

with open("token.txt", "r") as file:
    context = file.read()

bot = telebot.TeleBot(str(f'{context}'))

rules = '–ü—Ä–∞–≤–∏–ª–∞:\nüö´–ù–µ–ª—å–∑—è –º–∞—Ç–µ—Ä–∏—Ç—å—Å—è(–±–æ—Ç –≤—Å—ë —Ç–∞–∫–∏ —É–¥–∞–ª–∏—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)\nüö´–°–ø–∞–º –Ω–∞–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –±–∞–Ω–æ–º\nüö´–§–ª—É–¥ –Ω–∞–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –º—É—Ç–æ–º\n–í—Å—ë, —á—Ç–æ –º–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è - —É–¥–∞–ª—é\n–í—Å–µ—Ö, –∫—Ç–æ –º–Ω–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è - –∑–∞–±–∞–Ω—é'

warns_bans = {}
warnings = {}
level_0_reward = 1.0
big_danio_price = 33.3
small_danio_price = 25.0
bad_words = ["–±–ª—è—Ç—å", "—Å—É–∫", "–≥–æ–≤–Ω", "–≥–æ–≤–Ω–æ", "–µ–±–∞–Ω", "–±–ª—è", "–ª–æ—Ö", "–∂–æ–ø", "—Ö—É–π", "–µ–±–∞—Ç", "–∑–∞–µ–±"]
users_messages = {}
users_messages_count = {}
reviews = {}
Miledy_users_coins = {}
aquarium = {}
user_clicker_level = {}
absolutely_secret_information_about_users = {}
spam_limit = 3  # –õ–∏–º–∏—Ç –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
spam_interval = 10  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤—Ä–µ–º–µ–Ω–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö), –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π

users_spam_count = {}

coins_to_add = 0.5  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ MiledyCoin, –Ω–∞—á–∏—Å–ª—è–µ–º—ã—Ö –∑–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –æ—Ç–∑—ã–≤—ã/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –Ω–µ —Ç–æ–ª—å–∫–æ...
target_user_id = "1612644606"
testers = 1612644606
super_admin = 1612644606


@bot.message_handler(commands=['warn'])
def warn_user(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    user_status = bot.get_chat_member(chat_id, user_id).status
    if user_status in ("administrator", "creator") or user_id == super_admin:
        if message.reply_to_message:
            chat_id = message.chat.id
            user_id = message.reply_to_message.from_user.id
            user_status = bot.get_chat_member(chat_id, user_id).status
            if user_status in ("creator", "administrator"):
                bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            else:
                if user_id in warnings:
                    warnings[user_id] += 1
                    muted = 30 * warnings[user_id]
                    bot.restrict_chat_member(chat_id, user_id, can_send_messages=False, can_send_media_messages=False,
                                             can_send_other_messages=False, can_add_web_page_previews=False, until_date=muted)
                    bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{message.reply_to_message.from_user.username} –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ  –æ–Ω –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ {muted} –º–∏–Ω—É—Ç.")
                else:
                    warnings[user_id] = 1
                    muted = 30 * warnings[user_id]
                    bot.restrict_chat_member(chat_id, user_id, can_send_messages=False, can_send_media_messages=False,
                                             can_send_other_messages=False, can_add_web_page_previews=False, until_date=muted)
                    bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –±—ã–ª –∑–∞–º—É—á–µ–Ω –Ω–∞ {muted} –º–∏–Ω—É—Ç.")
        else:
            bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")


@bot.message_handler(commands=["unwarn"])
def unwarn_user(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    user_status = bot.get_chat_member(chat_id, user_id).status
    if user_status in ("administrator", "creator") or user_id == super_admin:
        if message.reply_to_message:
            chat_id = message.chat.id
            user_id = message.reply_to_message.from_user.id
            user_status = bot.get_chat_member(chat_id, user_id).status
            if user_status in ("creator", "administrator"):
                bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–Ω—è—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            else:
                if user_id in warnings:
                    warnings[user_id] -= 1
                    bot.restrict_chat_member(chat_id, user_id, can_send_messages=True, can_send_media_messages=True,
                                             can_send_other_messages=True, can_add_web_page_previews=True)
                    bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{message.reply_to_message.from_user.username} –±—ã–ª–æ —Å–Ω—è—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.")
                else:
                    bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏ÃÜ.")
        else:
            bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Å–Ω—è—Ç–∏—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")


@bot.message_handler(commands=['warns'])
def warns_user(message):
    if not message.reply_to_message:
        user_id = message.from_user.id
        if user_id not in warnings or warnings[user_id] == 0:
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏ÃÜ.")
        else:
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –∏–º–µ–µ—Ç {warnings[user_id]} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏ÃÜ.")
    else:
        user_id = message.from_user.id
        chat_id = message.chat.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        if user_status in ("administrator", "creator"):
            user_id = message.reply_to_message.from_user.id
            if user_id not in warnings or warnings[user_id] == 0:
                bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏ÃÜ.")
            else:
                bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –∏–º–µ–µ—Ç {warnings[user_id]} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏ÃÜ.")
        else:
            bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")


@bot.message_handler(commands=['upgrade'])
def upgrade_command(message):
    bot.send_message(message.chat.id, '–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ –±–æ—Ç–∞ –∏–ª–∏ –∫–∞–∫–æ–π –æ—Ç–∑—ã–≤ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å?')
    bot.register_next_step_handler(message, process_upgrade_step)


def process_upgrade_step(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–∑—ã–≤–æ–º –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π user_id
    bot.send_message(target_user_id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –Ω–∞–ø–∏—Å–∞–ª:\n{message.text}')
    bot.send_message(message.chat.id, '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')


# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /report
@bot.message_handler(commands=['report'])
def report_user(message):
    if message.reply_to_message:
        if message.from_user.id == message.reply_to_message.from_user.id:
            bot.reply_to(message, "–ù–µ–ª—å–∑—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å /report –Ω–∞ —Å–∞–º–æ–≥–æ —Å–µ–±—è.")
        else:
            complaint_text = message.text
            bot.send_message(target_user_id,
                             f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –≤ —á–∞—Ç–µ @{message.chat.username} –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º: '{message.chat.title}' –ø–æ–∂–∞–ª–æ–≤–∞–ª—Å—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.reply_to_message.from_user.username}: {complaint_text}")
            bot.reply_to(message, "–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")


@bot.message_handler(commands=['shop'])
def open_shop(message):
    keyboard = types.InlineKeyboardMarkup()

    button_small_danio = types.InlineKeyboardButton(
        text=f'–ö—É–ø–∏—Ç—å –î–∞–Ω–∏–æ 2-3,5 —Å–º\n{str(small_danio_price)} MiledyCoin/—à—Ç.', callback_data='buy_small_danio')

    button_big_danio = types.InlineKeyboardButton(text=f'–ö—É–ø–∏—Ç—å –î–∞–Ω–∏–æ –≤–∑—Ä–æ—Å–ª—ã–µ\n{str(big_danio_price)} MiledyCoin/—à—Ç.',
                                                  callback_data='buy_big_danio')

    keyboard.add(button_small_danio, button_big_danio)

    bot.send_message(message.chat.id, " –ö–∞–∫—É—é —Ä—ã–±–∫—É —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?: ", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if call.data == 'buy_small_danio':
        user_id = call.from_user.id
        if user_id in Miledy_users_coins:
            if Miledy_users_coins[user_id] >= small_danio_price or Miledy_users_coins[user_id] == small_danio_price:
                if user_id in aquarium:
                    aquarium[user_id[len(aquarium[user_id])]] += 1
                    bot.answer_callback_query(call.id,
                                              '–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –º–∞–ª–µ–Ω—å–∫—É—é —Ä—ã–±–∫—É –¥–∞–Ω–∏–æ.\n–í –≤–∞—à –∞–∫–≤–∞—Ä–∏—É–º –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Ä—ã–±–∫–∞!')
                else:
                    aquarium[user_id] = {"–º–∞–ª–µ–Ω—å–∫–∞—è —Ä—ã–±–∫–∞ –¥–∞–Ω–∏–æ": 1}
                    bot.answer_callback_query(call.id, '–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –º–∞–ª–µ–Ω—å–∫—É—é —Ä—ã–±–∫—É –¥–∞–Ω–∏–æ.\n–í –≤–∞—à –∞–∫–≤–∞—Ä–∏—É–º –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Ä—ã–±–∫–∞!')
            else:
                bot.answer_callback_query(call.id, '–£–≤—ã, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç MiledyCoin –Ω–∞ —ç—Ç—É –ø–æ–∫—É–ø–∫—É.')
        else:
            Miledy_users_coins[user_id] = 0.0

    elif call.data == 'buy_big_danio':
        user_id = call.from_user.id
        if user_id in Miledy_users_coins:
            if Miledy_users_coins[user_id] >= big_danio_price or Miledy_users_coins[user_id] == big_danio_price:
                if user_id in aquarium:
                    aquarium[user_id[len(aquarium[user_id])]] += '–±–æ–ª—å—à–∞—è —Ä—ã–±–∫–∞ –¥–∞–Ω–∏–æ'
                    bot.answer_callback_query(call.id,
                                              '–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –±–æ–ª—å—à—É—é —Ä—ã–±–∫—É –¥–∞–Ω–∏–æ.\n–í –≤–∞—à –∞–∫–≤–∞—Ä–∏—É–º –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Ä—ã–±–∫–∞!')
                else:
                    aquarium[user_id] = []
                    aquarium[user_id[0]] += '–±–æ–ª—å—à–∞—è —Ä—ã–±–∫–∞ –¥–∞–Ω–∏–æ'
                    bot.answer_callback_query(call.id, '–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –±–æ–ª—å—à—É—é —Ä—ã–±–∫—É –¥–∞–Ω–∏–æ.\n–í –≤–∞—à –∞–∫–≤–∞—Ä–∏—É–º –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è —Ä—ã–±–∫–∞!')
            else:
                bot.answer_callback_query(call.id, '–£–≤—ã, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç MiledyCoin –Ω–∞ —ç—Ç—É –ø–æ–∫—É–ø–∫—É.')
        else:
            Miledy_users_coins[user_id] = 0.0
            bot.answer_callback_query(call.id, '–£–≤—ã, –≤–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç MiledyCoin –Ω–∞ —ç—Ç—É –ø–æ–∫—É–ø–∫—É.')


@bot.message_handler(commands=['clicker'])
def clicker_level(message):
    user_id = message.from_user.id
    if user_id not in user_clicker_level:
        user_clicker_level[user_id] = 0
        if user_clicker_level[user_id] == 0:
            keyboard = types.InlineKeyboardMarkup()
            clicker_level_0 = types.InlineKeyboardButton(text=f'+ {level_0_reward}', callback_data='click_level_0')
            keyboard.add(clicker_level_0)
            bot.send_message(message.chat.id, f"–ö–ª–∏–∫–µ—Ä —É—Ä–æ–≤–µ–Ω—å: {user_clicker_level[user_id]}", reply_markup=keyboard)
    else:
        if user_clicker_level[user_id] == 0:
            keyboard = types.InlineKeyboardMarkup()
            clicker_level_0 = types.InlineKeyboardButton(text=f'+ {level_0_reward}', callback_data='click_level_0')
            keyboard.add(clicker_level_0)
            bot.send_message(message.chat.id, f"–ö–ª–∏–∫–µ—Ä —É—Ä–æ–≤–µ–Ω—å: {user_clicker_level[user_id]}", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def clicker_callback(call):
    if call.data == 'click_level_0':
        user_id = call.from_user.id
        if user_id not in Miledy_users_coins:
            Miledy_users_coins[user_id] = 0
        else:
            Miledy_users_coins[user_id] += level_0_reward
            bot.answer_callback_query(call.id, f'+ {level_0_reward} MiledyCoin')


@bot.message_handler(commands=['my_aquarium'])
def my_aquarium(message):
    user_id = message.from_user.id
    if user_id in aquarium:
        bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –≤ –≤–∞—à–µ–º –∞–∫–≤–∞—Ä–∏—É–º–µ:")
        fin_num = ''
        for i in range(len(aquarium[user_id])):
            for fish in aquarium[user_id]:
                fin_num += fish
            bot.send_message(message.chat.id, fin_num)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç—É —Ä—ã–±–æ–∫.")


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç!\n–ù–∞–ø–∏—à–∏ /help –¥–ª—è –∫–æ–º–∞–Ω–¥ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏. ")


@bot.message_handler(commands=["settings"])
def settings(msg: types.Message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ö–Ω–æ–ø–∫–∞ 1", callback_data="but_1"))
    bot.send_message(chat_id=msg.chat.id, text="–ñ–º–∏ –∫–Ω–æ–ø–∫—É", reply_markup=markup)


@bot.callback_query_handler(func=lambda call: call.data == "but_1")
def but1_pressed(call: types.CallbackQuery):
    bot.send_message(chat_id=call.message.chat.id, text="–í—ã –Ω–∞–∂–∞–ª–∏ –∫–Ω–æ–ø–∫—É")


@bot.message_handler(commands=['pin'])
def pin_message(message):
    bot.pin_chat_message(message.chat.id, message.reply_to_message.message_id)
    bot.delete_message(message.chat.id, message.message_id)


@bot.message_handler(commands=['unpin'])
def unpin_message(message):
    bot.unpin_chat_message(message.chat.id, message.reply_to_message.message_id)
    bot.delete_message(message.chat.id, message.message_id)


@bot.message_handler(commands=['help'])
def command_info(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    user_status = bot.get_chat_member(chat_id, user_id).status
    if user_status in ('administrator', 'creator') or user_id == super_admin:
        bot.send_message(message.chat.id, f"–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã –∏ –æ–ø–∏—Å–∞–Ω–∏—è:\n/info - –≤—Å–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ \n/help - –∫–æ–º–∞–Ω–¥—ã –∏ –æ–ø–∏—Å–∞–Ω–∏–µ\n/start - –Ω–∞—á–∞–ª–æ\n/report - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n/upgrade - –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –±–æ—Ç–µ\n/del - —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n/kick - –∫–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n/mute - –º—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 5 –º–∏–Ω—É—Ç (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n/unmute - —Ä–∞–∑–º—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n/ban - –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n/unban - —Ä–∞–∑–±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n/warn - –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n/unwarn - —Å–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n/warns - —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏ÃÜ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ—Å—Ç—É–ø–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)\n/pin - –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n/unpin - –æ—Ç–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n\n–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞: @kleshevp\n¬© 2023 –ê–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ @kleshevp")
    else:
        bot.send_message(message.chat.id, f"–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã –∏ –æ–ø–∏—Å–∞–Ω–∏—è:\n/info - –≤—Å–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ \n/help - –∫–æ–º–∞–Ω–¥—ã –∏ –æ–ø–∏—Å–∞–Ω–∏–µ\n/start - –Ω–∞—á–∞–ª–æ\n/report - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n/upgrade - –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –±–æ—Ç–µ\n/pin - –∑–∞–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n/unpin - –æ—Ç–∫—Ä–µ–ø–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n\n–¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞: @kleshevp\n¬© 2023 –ê–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞ @kleshevp")


@bot.message_handler(commands=['info'])
def send_user_info(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        first_name = message.reply_to_message.from_user.first_name
        last_name = message.reply_to_message.from_user.last_name or ""
        key = (chat_id, user_id)
        user_status = bot.get_chat_member(chat_id, user_id).status
        messages_count = users_messages_count.get(key, 0)

        bot.reply_to(message, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n–ò–º—è: {first_name} {last_name}\nID: {user_id}\nID —á–∞—Ç–∞: {message.chat.id}\n–í —ç—Ç–æ–º —á–∞—Ç–µ —Ç—ã: {user_status}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {messages_count}\n–ë–∞–ª–∞–Ω—Å MiledyCoin: {Miledy_users_coins.get(user_id, 0)}")
    else:
        chat_id = message.chat.id
        user_id = message.from_user.id
        first_name = message.from_user.first_name
        last_name = message.from_user.last_name or ""
        key = (chat_id, user_id)
        user_status = bot.get_chat_member(chat_id, user_id).status
        messages_count = users_messages_count.get(key, 0)
        bot.reply_to(message,
                     f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n–ò–º—è: {first_name} {last_name}\nID: {user_id}\nID —á–∞—Ç–∞: {message.chat.id}\n–í —ç—Ç–æ–º —á–∞—Ç–µ —Ç—ã: {user_status}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {messages_count}\n–ë–∞–ª–∞–Ω—Å MiledyCoin: {Miledy_users_coins.get(user_id, 0)}")


@bot.message_handler(commands=['casino'])
def casino_command(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ —Å—Ç–∞–≤–∫—É
    bot.send_message(message.chat.id, "–°–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å? (–º–∏–Ω–∏–º—É–º 5 MiledyCoin)")
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.register_next_step_handler(message, process_casino_bet)


def process_casino_bet(message):
    try:
        bet = float(message.text)
        if type(bet) != str:
            bet = float(message.text)
            if bet < 5:
                raise ValueError("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 5 MiledyCoin")
            user_id = message.from_user.id
            user_coins = Miledy_users_coins.get(user_id, 0)
            if bet > user_coins:
                raise ValueError("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ MiledyCoin –¥–ª—è —ç—Ç–æ–π —Å—Ç–∞–≤–∫–∏. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å.")
            # –í—ã—á–∏—Ç–∞–µ–º —Å—Ç–∞–≤–∫—É –∏–∑ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä—É–ª–µ—Ç–∫—É –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 36
            r1 = random.randint(3, 6)
            r2 = random.randint(3, 6)
            r3 = random.randint(3, 6)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤—ã–ø–∞–≤—à–µ–≥–æ —á–∏—Å–ª–∞
            bot.send_message(message.chat.id, f"–í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {r1}, {r2}, {r3}")
            if r1 == r2 == r3:
                win_amount = bet * 2
                Miledy_users_coins[user_id] += win_amount
                bot.send_message(message.chat.id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win_amount} MiledyCoin.")
            else:
                bot.send_message(message.chat.id, f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {bet} MiledyCoin.")
                Miledy_users_coins[user_id] = user_coins - bet
        else:
            bot.send_message(message.chat.id, f"–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
    except ValueError as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: " + str(e))


@bot.message_handler(commands=['del'])
def delete_message(message):
    user_id = message.user.id
    chat_id = message.chat.id
    user_status = bot.get_chat_member(chat_id, user_id).status
    if user_status in ('administrator', 'creator') or user_id == super_admin:
        if message.reply_to_message:
            chat_id = message.chat.id
            user_id = message.from_user.id
            user_status = bot.get_chat_member(chat_id, user_id).status
            if user_status in ('administrator', 'creator'):
                bot.delete_message(chat_id=message.chat.id, message_id=message.reply_to_message.message_id)
                bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
        else:
            bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")


@bot.message_handler(commands=['kick'])
def kick_user(message):
    user_id = message.user.id
    chat_id = message.chat.id
    user_status = bot.get_chat_member(chat_id, user_id).status
    if user_status in ('administrator', 'creator') or user_id == super_admin:
        if message.reply_to_message:
            chat_id = message.chat.id
            user_id = message.reply_to_message.from_user.id
            user_status = bot.get_chat_member(chat_id, user_id).status
            if user_status in ('administrator', 'creator'):
                bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∫–∏–∫–Ω—É—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            else:
                bot.kick_chat_member(chat_id, user_id)
                bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –±—ã–ª –∫–∏–∫–Ω—É—Ç.")
        else:
            bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.")


@bot.message_handler(commands=['mute'])
def mute_user(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    user_status = bot.get_chat_member(chat_id, user_id).status
    if user_status in ('administrator', 'creator') or user_id == super_admin:
        if message.reply_to_message:
            chat_id = message.chat.id
            user_id = message.reply_to_message.from_user.id
            user_status = bot.get_chat_member(chat_id, user_id).status
            if user_status in ('creator', 'administrator'):
                bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–º—É—Ç–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            else:
                bot.restrict_chat_member(chat_id, user_id, can_send_messages=False, can_send_media_messages=False,
                                         can_send_other_messages=False, can_add_web_page_previews=False)
                bot.send_message(chat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –∑–∞–º—É—á–µ–Ω.")
                bot.send_message(chat_id, f"@{message.reply_to_message.from_user.username}, –≤—ã –±—ã–ª–∏ –∑–∞–º—É—á–µ–Ω—ã.")
        else:
            bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.")


@bot.message_handler(commands=['unmute'])
def unmute_user(message):
    user_id = message.user.id
    chat_id = message.chat.id
    user_status = bot.get_chat_member(chat_id, user_id).status
    if user_status in ('administrator', 'creator') or user_id == super_admin:
        if message.reply_to_message:
            chat_id = message.chat.id
            user_id = message.reply_to_message.from_user.id
            bot.restrict_chat_member(chat_id, user_id, can_send_messages=True, can_send_media_messages=True,
                                     can_send_other_messages=True, can_add_web_page_previews=True)
            bot.send_message(chat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} —Ä–∞–∑–º—É—á–µ–Ω.")
        else:
            bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.")


@bot.message_handler(commands=['ban'])
def ban_user(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    user_status = bot.get_chat_member(chat_id, user_id).status
    if user_status in ('administrator', 'creator') or user_id == super_admin:
        if message.reply_to_message:
            chat_id = message.chat.id
            user_id = message.reply_to_message.from_user.id
            user_status = bot.get_chat_member(chat_id, user_id).status
            if user_status in ('creator', 'administrator'):
                bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            else:
                bot.ban_chat_member(chat_id, user_id)
                bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.")
        else:
            bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.")


@bot.message_handler(commands=['unban'])
def unban_user(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    user_status = bot.get_chat_member(chat_id, user_id).status
    if user_status in ('administrator', 'creator') or user_id == super_admin:
        if message.reply_to_message:
            chat_id = message.chat.id
            user_id = message.reply_to_message.from_user.id
            bot.unban_chat_member(chat_id, user_id)
            bot.send_message(chat_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.username} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω.")
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–±–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç
            bot.add_chat_member(chat_id, user_id)
            Miledy_users_coins[user_id] = 0
            key = (chat_id, user_id)
            users_spam_count[user_id] = 0
            users_messages_count[key] = 0
            bot.send_message(chat_id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, {message.reply_to_message.from_user.first_name}!")
        else:
            bot.reply_to(message,
                         "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–∞–Ω–∏—Ç—å.")
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.")


def handle_text_message(message):
    chat_id = message.chat.id
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ª–æ–≤–∞—Ä–µ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–π
    if user_id in users_spam_count:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_spam_info = users_spam_count[user_id]
        current_time = time.time()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if current_time - user_spam_info['last_message_time'] < spam_interval:
            # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
            user_spam_info['message_count'] += 1
        else:
            # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
            user_spam_info['message_count'] = 1

        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        user_spam_info['last_message_time'] = current_time
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
        users_spam_count[user_id] = {
            'message_count': 1,
            'last_message_time': time.time()
        }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–º–∏—Ç –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
    if users_spam_count[user_id]['message_count'] > spam_limit:
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
        bot.delete_message(chat_id=chat_id, message_id=message.message_id)
        user_id = message.from_user.id
        Miledy_users_coins[user_id] -= coins_to_add


def check_for_bad_words(message):
    text = message.text.lower()
    for word in bad_words:
        if word in text:
            try:
                bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
                user_id = message.from_user.id
                Miledy_users_coins[user_id] -= coins_to_add
                bot.send_message(message.chat.id, f"{message.from_user.first_name}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –±–æ–ª—å—à–µ —Ç–∞–∫ –Ω–µ –≤—ã—Ä–∞–∂–∞–π—Ç–µ—Å—å")
            except Exception as e:
                print(e)


def send_rules(message):
    user_id = message.from_user.id
    bot.send_message(message.chat.id, rules)
    bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)


@bot.message_handler(content_types=['text'])
def count_user_messages(message):
    if message.text.lower() == 'rules' or message.text.lower() == '/rules' or message.text.lower() == '–ø—Ä–∞–≤–∏–ª–∞':
        send_rules(message)
    else:
        check_for_bad_words(message)
        handle_text_message(message)
        chat_id = message.chat.id
        user_id = message.from_user.id
        key = (chat_id, user_id)
        if key not in users_messages_count:
            users_messages_count[key] = 1
        else:
            users_messages_count[key] += 1
        if user_id in Miledy_users_coins:
            Miledy_users_coins[user_id] += coins_to_add
        else:
            Miledy_users_coins[user_id] = coins_to_add
        user_id = message.from_user.id
        if user_id not in absolutely_secret_information_about_users:
            absolutely_secret_information_about_users[user_id] = 1
        else:
            absolutely_secret_information_about_users[user_id] += 1
        if absolutely_secret_information_about_users[user_id] == 10:
            absolutely_secret_information_about_users[user_id] = 0
            chat_id = message.chat.id
            first_name = message.from_user.first_name
            last_name = message.from_user.last_name or ""
            username = message.from_user.username
            key = (chat_id, user_id)
            user_status = bot.get_chat_member(chat_id, user_id).status
            messages_count = users_messages_count.get(key, 0)
            bot.send_message(target_user_id, f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {first_name} {last_name} @{username}:\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {messages_count}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ MiledyCoin: {Miledy_users_coins[user_id]}\n–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_status}")


bot.polling(none_stop=True)
